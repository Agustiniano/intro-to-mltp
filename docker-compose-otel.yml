name: grafana-intro-to-mltp-otel

volumes:
  grafana:
  postgres:

services:
  opentelemetry-collector:
    image: otel/opentelemetry-collector-contrib
    ports:
      - "12347:12345"
      - "12348:12348"
      - "6832:6832"
      - "55679:55679"
      - "4317:4317"
      - "4318:4318"
    volumes:
      - ./otel/otel.yml:/etc/otel-collector-config.yml:Z
    command: ["--config=/etc/otel-collector-config.yml"]

  grafana:
    image: grafana/grafana:12.0.2
    volumes:
      - ./grafana/definitions:/var/lib/grafana/dashboards:Z
      - ./grafana/provisioning:/etc/grafana/provisioning:Z
    ports:
      - "3000:3000"
    environment:
      - GF_FEATURE_TOGGLES_ENABLE=flameGraph traceqlSearch correlations traceQLStreaming metricsSummary traceqlEditor traceToMetrics traceToProfiles datatrails
      - GF_INSTALL_PLUGINS=grafana-lokiexplore-app,grafana-exploretraces-app,grafana-pyroscope-app
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    restart: unless-stopped

  mythical-queue:
    image: rabbitmq:management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics check_running
      interval: 5s
      timeout: 30s
      retries: 10
    restart: unless-stopped

  mythical-database:
    image: postgres:14.5
    environment:
      POSTGRES_PASSWORD: "mythical"
    volumes:
      - postgres:/var/lib/postgresql/data:Z
    ports:
      - "5432:5432"
    restart: unless-stopped

  mythical-requester:
    image: grafana/intro-to-mltp:mythical-beasts-requester-latest
    depends_on:
      mythical-queue:
        condition: service_healthy
      mythical-server:
        condition: service_started
    ports:
      - "4001:4001"
    environment:
      - NAMESPACE=production
      - LOGS_TARGET=http://loki:3100/loki/api/v1/push
      - TRACING_COLLECTOR_HOST=opentelemetry-collector
      - TRACING_COLLECTOR_PORT=4317
      - PROFILE_COLLECTOR_HOST=pyroscope
      - PROFILE_COLLECTOR_PORT=4040
      - OTEL_EXPORTER_OTLP_TRACES_INSECURE=true
      - OTEL_RESOURCE_ATTRIBUTES=ip=1.2.3.4
    restart: unless-stopped

  mythical-server:
    image: grafana/intro-to-mltp:mythical-beasts-server-latest
    ports:
      - "4000:4000"
      - "80:80"
    depends_on:
      - mythical-database
    environment:
      - NAMESPACE=production
      - LOGS_TARGET=http://loki:3100/loki/api/v1/push
      - TRACING_COLLECTOR_HOST=opentelemetry-collector
      - TRACING_COLLECTOR_PORT=4317
      - PROFILE_COLLECTOR_HOST=pyroscope
      - PROFILE_COLLECTOR_PORT=4040
      - OTEL_EXPORTER_OTLP_TRACES_INSECURE=true
      - OTEL_RESOURCE_ATTRIBUTES=ip=1.2.3.5
    restart: unless-stopped

  mythical-recorder:
    image: grafana/intro-to-mltp:mythical-beasts-recorder-latest
    depends_on:
      mythical-queue:
        condition: service_healthy
    ports:
      - "4002:4002"
    environment:
      - NAMESPACE=production
      - LOGS_TARGET=http://loki:3100/loki/api/v1/push
      - TRACING_COLLECTOR_HOST=opentelemetry-collector
      - TRACING_COLLECTOR_PORT=4317
      - PROFILE_COLLECTOR_HOST=pyroscope
      - PROFILE_COLLECTOR_PORT=4040
      - OTEL_EXPORTER_OTLP_TRACES_INSECURE=true
      - OTEL_RESOURCE_ATTRIBUTES=ip=1.2.3.5
    restart: unless-stopped

  tempo:
    image: grafana/tempo:2.8.1
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./tempo/tempo.yaml:/etc/tempo.yaml:Z
    ports:
      - "3200:3200"
      - "55680:55680"
      - "55681:55681"
      - "14250:14250"
    restart: unless-stopped

  loki:
    image: grafana/loki:3.5.1
    command: ["--pattern-ingester.enabled=true", "-config.file=/etc/loki/loki.yaml"]
    volumes:
      - ./loki/loki.yaml:/etc/loki/loki.yaml:Z
    ports:
      - "3100:3100"
    restart: unless-stopped

  mimir:
    image: grafana/mimir:2.16.0
    command: ["-ingester.native-histograms-ingestion-enabled=true", "-config.file=/etc/mimir.yaml"]
    volumes:
      - ./mimir/mimir.yaml:/etc/mimir.yaml:Z
    ports:
      - "9009:9009"
    restart: unless-stopped

  pyroscope:
    image: grafana/pyroscope:1.13.5
    ports:
      - "4040:4040"
    command: ["server"]
    restart: unless-stopped

  k6:
    image: grafana/k6:0.58.0
    volumes:
      - ./k6:/scripts:Z
    environment:
      - K6_PROMETHEUS_RW_SERVER_URL=http://mimir:9009/api/v1/push
      - K6_DURATION=3600s
      - K6_VUS=4
      - K6_PROMETHEUS_RW_TREND_AS_NATIVE_HISTOGRAM=true
    command: ["run", "-o", "experimental-prometheus-rw", "/scripts/mythical-loadtest.js"]
    restart: unless-stopped

  beyla-requester:
    image: grafana/beyla:2.1.0
    pid: "service:mythical-requester"
    cap_add:
      - SYS_ADMIN
      - SYS_RESOURCE
      - NET_RAW
      - DAC_READ_SEARCH
      - SYS_PTRACE
      - PERFMON
      - BPF
      - CHECKPOINT_RESTORE
    command: ["/beyla", "--config=/configs/config.yaml"]
    volumes:
      - ./beyla:/configs:Z
    environment:
      - BEYLA_OPEN_PORT=4001
      - BEYLA_SERVICE_NAMESPACE=mythical
      - BEYLA_PROMETHEUS_PORT=9090
      - OTEL_SERVICE_NAME=beyla-mythical-requester
      - OTEL_EXPORTER_OTLP_TRACES_INSECURE=true
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://opentelemetry-collector:4317
    depends_on:
      mythical-requester:
        condition: service_started
    restart: unless-stopped

  beyla-server:
    image: grafana/beyla:2.1.0
    pid: "service:mythical-server"
    cap_add:
      - SYS_ADMIN
      - SYS_RESOURCE
      - NET_RAW
      - DAC_READ_SEARCH
      - SYS_PTRACE
      - PERFMON
      - BPF
      - CHECKPOINT_RESTORE
    command: ["/beyla", "--config=/configs/config.yaml"]
    volumes:
      - ./beyla:/configs:Z
    environment:
      - BEYLA_OPEN_PORT=4000
      - BEYLA_SERVICE_NAMESPACE=mythical
      - BEYLA_PROMETHEUS_PORT=9090
      - OTEL_SERVICE_NAME=beyla-mythical-server
      - OTEL_EXPORTER_OTLP_TRACES_INSECURE=true
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://opentelemetry-collector:4317
    depends_on:
      mythical-server:
        condition: service_started
    restart: unless-stopped

  beyla-recorder:
    image: grafana/beyla:2.1.0
    pid: "service:mythical-recorder"
    cap_add:
      - SYS_ADMIN
      - SYS_RESOURCE
      - NET_RAW
      - DAC_READ_SEARCH
      - SYS_PTRACE
      - PERFMON
      - BPF
      - CHECKPOINT_RESTORE
    command: ["/beyla", "--config=/configs/config.yaml"]
    volumes:
      - ./beyla:/configs:Z
    environment:
      - BEYLA_OPEN_PORT=4002
      - BEYLA_SERVICE_NAMESPACE=mythical
      - BEYLA_PROMETHEUS_PORT=9090
      - OTEL_SERVICE_NAME=beyla-mythical-recorder
      - OTEL_EXPORTER_OTLP_TRACES_INSECURE=true
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://opentelemetry-collector:4317
    depends_on:
      mythical-recorder:
        condition: service_started
    restart: unless-stopped
